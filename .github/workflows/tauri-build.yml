name: Tauri Build

on:
  workflow_dispatch:
    inputs:
      os:
        description: "ビルド対象OS"
        required: true
        default: all
        type: choice
        options:
          - all
          - ubuntu
          - macos
          - windows

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    if: |
      inputs.os == 'all' ||
      (inputs.os == 'ubuntu' && matrix.os == 'ubuntu-latest') ||
      (inputs.os == 'macos' && matrix.os == 'macos-latest') ||
      (inputs.os == 'windows' && matrix.os == 'windows-latest')
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    env:
      # LLM provider/env are required at build time by taskGenerator.ts
      VITE_LLM_PROVIDER: ${{ secrets.VITE_LLM_PROVIDER }}
      VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}
      VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Enable Corepack and activate pnpm
        shell: bash
        run: |
          corepack enable
          corepack prepare pnpm@10.11.0 --activate
          pnpm -v

      - name: Install dependencies
        run: pnpm install --frozen-lockfile=false

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          # Tauri (Wry) toolchain deps for bundling
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Cache Cargo target
        uses: actions/cache@v4
        with:
          path: |
            target
            src-tauri/target
          key: ${{ runner.os }}-cargo-target-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-target-

      - name: Verify LLM env
        shell: bash
        run: |
          if [[ -z "${VITE_LLM_PROVIDER}" ]]; then
            echo "VITE_LLM_PROVIDER secret is not set. Set to 'google' or 'openai'." >&2
            exit 1
          fi
          if [[ "${VITE_LLM_PROVIDER}" == "openai" ]] && [[ -z "${VITE_OPENAI_API_KEY}" ]]; then
            echo "VITE_OPENAI_API_KEY secret is required when VITE_LLM_PROVIDER=openai." >&2
            exit 1
          fi
          if [[ "${VITE_LLM_PROVIDER}" != "openai" ]] && [[ -z "${VITE_GOOGLE_API_KEY}" ]]; then
            echo "VITE_GOOGLE_API_KEY secret is required when VITE_LLM_PROVIDER is not 'openai'." >&2
            exit 1
          fi

      - name: Type check
        run: pnpm check

      - name: Build web
        run: pnpm build

      - name: Build Tauri app
        run: pnpm tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-${{ runner.os }}
          path: |
            src-tauri/target/release/bundle/**
            target/release/bundle/**
          if-no-files-found: warn
