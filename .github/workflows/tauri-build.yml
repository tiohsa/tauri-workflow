name: Tauri Build

on:
  workflow_dispatch:
    inputs:
      os:
        description: "ビルド対象OS"
        required: true
        default: all
        type: choice
        options: [all, ubuntu, macos, windows]

permissions:
  contents: read # 最小権限

concurrency:
  group: tauri-build-${{ github.ref }}-${{ github.event.inputs.os || 'all' }}
  cancel-in-progress: true

jobs:
  build-ubuntu:
    name: Build (ubuntu-latest)
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.os == 'all' || github.event.inputs.os == 'ubuntu' }}
    timeout-minutes: 60
    env:
      VITE_LLM_PROVIDER: ${{ secrets.VITE_LLM_PROVIDER }}
      VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}
      VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm
      - name: Enable Corepack and pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.11.0 --activate
          pnpm -v
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-
      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libwebkit2gtk-4.1-dev \
            libgtk-3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
            src-tauri -> src-tauri/target
      - run: pnpm install --frozen-lockfile=true
      - run: pnpm check
      - run: pnpm tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: app-ubuntu
          path: src-tauri/target/**/bundle/**
          if-no-files-found: warn

  build-macos:
    name: Build (macos-latest)
    runs-on: macos-latest
    if: ${{ github.event.inputs.os == 'all' || github.event.inputs.os == 'macos' }}
    timeout-minutes: 60
    env:
      VITE_LLM_PROVIDER: ${{ secrets.VITE_LLM_PROVIDER }}
      VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}
      VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm
      - name: Enable Corepack and pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.11.0 --activate
          pnpm -v
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
            src-tauri -> src-tauri/target
      - run: pnpm install --frozen-lockfile=true
      - run: pnpm check
      - run: pnpm tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: app-macos
          path: src-tauri/target/**/bundle/**
          if-no-files-found: warn

  build-windows:
    name: Build (windows-latest)
    runs-on: windows-latest
    if: ${{ github.event.inputs.os == 'all' || github.event.inputs.os == 'windows' }}
    timeout-minutes: 60
    env:
      VITE_LLM_PROVIDER: ${{ secrets.VITE_LLM_PROVIDER }}
      VITE_GOOGLE_API_KEY: ${{ secrets.VITE_GOOGLE_API_KEY }}
      VITE_OPENAI_API_KEY: ${{ secrets.VITE_OPENAI_API_KEY }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm
      - name: Enable Corepack and pnpm
        shell: bash
        run: |
          corepack enable
          corepack prepare pnpm@10.11.0 --activate
          pnpm -v
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            . -> target
            src-tauri -> src-tauri/target
      - run: pnpm install --frozen-lockfile=true
      - run: pnpm check
      - run: pnpm tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      - uses: actions/upload-artifact@v4
        with:
          name: app-windows
          path: src-tauri/target/**/bundle/**
          if-no-files-found: warn
